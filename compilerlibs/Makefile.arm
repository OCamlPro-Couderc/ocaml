#**************************************************************************
#*                                                                        *
#*                                 OCaml                                  *
#*                                                                        *
#*            Xavier Leroy, projet Cristal, INRIA Rocquencourt            *
#*                                                                        *
#*   Copyright 1999 Institut National de Recherche en Informatique et     *
#*     en Automatique.                                                    *
#*                                                                        *
#*   All rights reserved.  This file is distributed under the terms of    *
#*   the GNU Lesser General Public License version 2.1, with the          *
#*   special exception on linking described in the file LICENSE.          *
#*                                                                        *
#**************************************************************************

COMPFLAGS_ARM= $(COMPFLAGS_NO_ARCH) -I asmcomp/arm

ASMCOMP_ARCH_PARAMS_ARM=\
  asmcomp/arm/arch.cmo \
  asmcomp/arm/proc.cmo

ASMCOMP_ARCH_PARAMS_FUNCT_ARM=\
  asmcomp/arm/CSE.cmo \
  asmcomp/arm/selection.cmo \
  asmcomp/arm/reload.cmo \
  asmcomp/arm/scheduling.cmo \
  asmcomp/arm/emit.cmo

ASMCOMP_ARCH_ARM=\
  $(ASMCOMP_ARCH_PARAMS_ARM) $(ASMCOMP_ARCH_PARAMS_FUNCT_ARM)


$(ASMCOMP_ARCH_PARAMS_ARM:%.cmo=%.cmi): %.cmi: %.mli
	$(CAMLC) $(COMPFLAGS_ARM) -c -for-pack "Arm()" $<

$(ASMCOMP_ARCH_PARAMS_ARM): %.cmo: %.ml
	$(CAMLC) $(COMPFLAGS_ARM) -c -for-pack "Arm()" $<

$(ASMCOMP_ARCH_PARAMS_ARM:%.cmo=%.cmx): %.cmx: %.ml
	$(CAMLOPT) $(COMPFLAGS_ARM) -c -for-pack "Arm()" $<

asmcomp/arm/CSE_param.cmi: asmcomp/parameters/CSE_param.mli asmcomp/CSE_type.cmo
	$(CAMLC) $(COMPFLAGS_ARM) -o $@ -c -parameter-of "Arm()".CSE $<

asmcomp/arm/CSE.cmo: asmcomp/arm/CSE.ml asmcomp/arm/CSE_param.cmi
	$(CAMLC) $(COMPFLAGS_ARM) -c -for-pack "Arm()" -parameter CSE_param $<

asmcomp/arm/CSE.cmx: asmcomp/arm/CSE.ml asmcomp/arm/CSE_param.cmi
	$(CAMLOPT) $(COMPFLAGS_ARM) -c -for-pack "Arm()" -parameter CSE_param $<


asmcomp/arm/selection_param.cmi: asmcomp/parameters/selection_param.mli asmcomp/selection_type.cmo
	$(CAMLC) $(COMPFLAGS_ARM) -o $@ -c -parameter-of "Arm()".Selection $<

asmcomp/arm/selection.cmo: asmcomp/arm/selection.ml asmcomp/arm/selection_param.cmi
	$(CAMLC) $(COMPFLAGS_ARM) -c -for-pack "Arm()" -parameter Selection_param $<

asmcomp/arm/selection.cmx: asmcomp/arm/selection.ml asmcomp/arm/selection_param.cmi
	$(CAMLOPT) $(COMPFLAGS_ARM) -c -for-pack "Arm()" -parameter Selection_param $<


asmcomp/arm/reload_param.cmi: asmcomp/parameters/reload_param.mli  asmcomp/reload_type.cmo
	$(CAMLC) $(COMPFLAGS_ARM) -o $@ -c -parameter-of "Arm()".Reload $<

asmcomp/arm/reload.cmo: asmcomp/arm/reload.ml asmcomp/arm/reload_param.cmi
	$(CAMLC) $(COMPFLAGS_ARM) -c -for-pack "Arm()" -parameter Reload_param $<

asmcomp/arm/reload.cmx: asmcomp/arm/reload.ml asmcomp/arm/reload_param.cmi
	$(CAMLOPT) $(COMPFLAGS_ARM) -c -for-pack "Arm()" -parameter Reload_param $<


asmcomp/arm/scheduling_param.cmi: asmcomp/parameters/scheduling_param.mli asmcomp/scheduling_type.cmo
	$(CAMLC) $(COMPFLAGS_ARM) -o $@ -c -parameter-of "Arm()".Scheduling $<

asmcomp/arm/scheduling.cmo: asmcomp/arm/scheduling.ml asmcomp/arm/scheduling_param.cmi
	$(CAMLC) $(COMPFLAGS_ARM) -c -for-pack "Arm()" -parameter Scheduling_param $<

asmcomp/arm/scheduling.cmx: asmcomp/arm/scheduling.ml asmcomp/arm/scheduling_param.cmi
	$(CAMLOPT) $(COMPFLAGS_ARM) -c -for-pack "Arm()" -parameter Scheduling_param $<


asmcomp/arm/emit_param.cmi: asmcomp/parameters/emit_param.mli asmcomp/mach_type.cmi asmcomp/linear_type.cmi
	$(CAMLC) $(COMPFLAGS_ARM) -o $@ -c -parameter-of "Arm()".Emit $<

asmcomp/arm/emit.cmo: asmcomp/arm/emit.ml asmcomp/arm/emit_param.cmi
	$(CAMLC) $(COMPFLAGS_ARM) -c -for-pack "Arm()" -parameter Emit_param $<

asmcomp/arm/emit.cmx: asmcomp/arm/emit.ml asmcomp/arm/emit_param.cmi
	$(CAMLOPT) $(COMPFLAGS_ARM) -c -for-pack "Arm()" -parameter Emit_param $<

asmcomp/arm/arm.cmi: $(ASMCOMP_ARCH_PARAMS_ARM)
	$(CAMLC) -o $@ $(COMPFLAGS_ARM) -parameter-unit asmcomp/arm/arm.mli

asmcomp/arm/arm.cmo: asmcomp/arm/arm.cmi $(ARCH_SPECIFIC_ASMCOMP_CMI) $(ASMCOMP_ARCH_ARM)
	$(CAMLC) -o $@ $(COMPFLAGS_ARM) -parameter-unit -pack $(ASMCOMP_ARCH_ARM)

asmcomp/arm/arm.cmx: asmcomp/arm/arm.cmi $(ARCH_SPECIFIC_ASMCOMP_CMI) $(ASMCOMP_ARCH_ARM:%.cmo=%.cmx)
	$(CAMLOPT) -o $@ $(COMPFLAGS_ARM) -parameter-unit -pack $(ASMCOMP_ARCH_ARM:%.cmo=%.cmx)

asmcomp/arm/emit.ml: asmcomp/arm/emit.mlp tools/cvt_emit
	echo \# 1 \"arm/emit.mlp\" > $@
	$(CAMLRUN) tools/cvt_emit < $< >> $@ \
	|| { rm -f $@; exit 2; }
